name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      LAST_FM_API_KEY: ${{ secrets.LAST_FM_API_KEY }}
      LAST_FM_API_SECRET: ${{ secrets.LAST_FM_API_SECRET }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release
    
    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: SonarCloud Begin
      run: dotnet sonarscanner begin /k:"SHOEGAZEssb_Shoegaze.LastFM" /o:"shoegazessb" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Build (for SonarCloud)
      run: dotnet build --no-incremental

    - name: Test (for SonarCloud)
      run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: SonarCloud End
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Generate coverage report
      run: |
        reportgenerator \
        -reports:./TestResults/**/coverage.cobertura.xml \
        -targetdir:./coveragereport \
        -reporttypes:Html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./TestResults/**/coverage.cobertura.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true